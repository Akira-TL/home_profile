#!/bin/bash
export APP_HOME=$HOME/.local
if [[ $PATH != *"${HOME}/.local/bin:"* ]]; then
    export PATH=$HOME/.local/bin:$PATH
fi
if [ -d "$HOME/.pyenv" ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    if [[ $PATH != *"${PYENV_ROOT}/bin:"*  && -d "$PYENV_ROOT/bin" ]]; then
        export PATH="$PYENV_ROOT/bin:$PATH"
    fi
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi
if [ -d "$HOME/.renv" ]; then
    export RENV_ROOT="$HOME/.renv"
    if [[ $PATH != *"${RENV_ROOT}/bin:"* && -d "$RENV_ROOT/bin" ]]; then
        export PATH="$RENV_ROOT/bin:$PATH"
    fi
    if [[ $LIBRARY_PATH != *"${RENV_ROOT}/lib/R/lib:"* && -d "$RENV_ROOT/lib" ]]; then
        export LIBRARY_PATH="$RENV_ROOT/lib/R/lib:$LIBRARY_PATH"
    fi
fi
# export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/.local/readline/lib #设置动态链接库的路径
# export LIBRARY_PATH=$LIBRARY_PATH:$HOME/.local/readline/lib #设置静态库的路径

LOGIN_IP=$(last "$(whoami)" | grep -oP ".*(\d*\.\d*\.\d*\.\d*).*still logged in" | grep -oP "(\d*\.\d*\.\d*\.\d*)" | head -n 1)
export LOGIN_IP
# 判断.shell_log是否存在并生成
if [ ! -d "${HOME}/.shell_log" ]; then
    mkdir "${HOME}/.shell_log"
fi
if [[ -n "$STY" ]]; then
    # 从 STY 变量中提取会话 ID，再通过 screen -ls 解析名称
    session_id=$(echo $STY | cut -d. -f1)
    SCREEN_NAME=$(screen -ls | awk -v id="$session_id" '$0 ~ id {print $1}' | cut -d. -f2)
    export SCREEN_NAME
else
    SCREEN_NAME=pts$(tty | cut -d'/' -f4)
    export SCREEN_NAME
fi
logf="${HOME}/.shell_log/${SCREEN_NAME}_$(date +%Y-%m-%d_%H:%M:%S).log" # 单终端的临时输出文件
export logf
export VIRTUAL_ENV_DISABLE_PROMPT=1
DISABLE_AUTO_TITLE=true